package com.java8Features.lambdaEx;

import java.util.*;
import java.util.Map.Entry;
import java.util.concurrent.*;
import java.util.concurrent.ConcurrentHashMap.KeySetView;

public class TestConcurrentMap extends Thread {

	static ConcurrentHashMap<Integer, String> map = new ConcurrentHashMap<>();

	public void run() {
		try {
			Thread.sleep(2000);

		} catch (Exception e) {
			// TODO: handle exception
		}
		 System.out.println("Child Thread updating Map");
		map.put(101, "Book");
	}

	public static void main(String arg[]) throws InterruptedException {
		map.put(102, "Pen");
		map.put(103, "Bottle");

		TestConcurrentMap t1 = new TestConcurrentMap();
		t1.start();

		KeySetView<Integer, String> keySet = map.keySet();
		
		Iterator<Integer> iterator = keySet.iterator();
		
		while (iterator.hasNext()) {
			
			Integer integer = (Integer) iterator.next();
			
			 System.out.println(
		                "Main Thread Iterating Map and Current Entry is:"
		                + integer + "..." + map.get(integer));
			 
			 Thread.sleep(3000);
			
		}
		System.out.println(map);

	}
}
