package com.java8Features.lambdaEx;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;


interface LE{
	
	void test(int i1,int i2);

	
}
interface ML{
	
	
	double multiplecation(int i,int m);
}
public class LambdaExpresion {

	public static void main(String[] args) {

		/*
		 * List<Integer> list = new ArrayList<>(); list.add(2); list.add(3);
		 * list.add(5); list.add(8); list.forEach(n -> System.out.println(n));
		 * 
		 * list.forEach(even -> {
		 * 
		 * if (even % 2 == 0) { System.out.println("Even number's :" + even); } } );
		 */
		
		// multiperameter lambda  expression 
		LE e=((int a,int b) -> System.out.println(a+b));
		e.test(26, 07);
		
	  ML mul=(i,m) ->{return i*m; };
	  System.out.println(mul.multiplecation(5,6));
	  
	  
	  
	  TreeMap<Integer, String> m = 
              new TreeMap<Integer, String>((o1, o2) -> (o1 > o2) ? 
                                          -1 : (o1 < o2) ? 1 : 0);
   m.put(1, "Apple");
   m.put(4, "Mango");
   m.put(5, "Orange");
   m.put(2, "Banana");
   m.put(3, "Grapes");
   System.out.println("Elements of the TreeMap " + 
                        "after sorting are : " + m);
	}
	
	
	
	
	
	
	
	
	
	
}
